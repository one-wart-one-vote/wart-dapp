name: Release
on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Docker Build
          run: DOCKER_BUILDKIT=1 docker build . -f dockerfiles/Dockerfile --output build

        - name: Get version
          id: get_version
          run: |
              echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV 

        - name: Upload Ubuntu build artifact
          uses: actions/upload-artifact@v3
          with:
            name: ubuntu-build
            path: ./build/wart-dapp-ubuntu22

  build-macos:
    runs-on: macos-latest
    needs: build-ubuntu
    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'

        - name: Install dependencies
          run: |
              brew install create-dmg
              python3 -m pip install -r requirements.txt

        - name: Build application
          run: |
              python3 -m PyInstaller --clean --windowed main.spec

        - name: Create DMG
          run: |
              mkdir -p dist/dmg
              create-dmg \
                --volname "wart-dapp-macos" \
                --window-pos 200 120 \
                --window-size 800 400 \
                --icon-size 100 \
                --app-drop-link 600 185 \
                "dist/dmg/wart-dapp-macos.dmg" \
                "dist/wart-dapp.app"
          
        - name: Upload Mac build artifact
          uses: actions/upload-artifact@v3
          with:
            name: macos-build
            path: 'dist/dmg/wart-dapp-macos.dmg'

  release:
    needs: [build-ubuntu, build-macos]
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v3
        
        - name: Get version
          id: get_version
          run: |
              echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV 

        - name: Download Ubuntu build artifact
          uses: actions/download-artifact@v3
          with:
            name: ubuntu-build
            path: ./build

        - name: Download Mac build artifact
          uses: actions/download-artifact@v3
          with:
            name: macos-build
            path: ./dist/dmg

        - name: Release
          uses: softprops/action-gh-release@v0.1.15
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: v${{ env.VERSION }}
            name: Release v${{ env.VERSION }}
            generate_release_notes: true
            files: |
                ./build/wart-dapp-ubuntu22
                ./dist/dmg/wart-dapp-macos.dmg